// automatically generated by Xtext
grammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals

import "http://www.example.com/xpdl" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

XpdlRoot returns XpdlRoot:
	{XpdlRoot}
	'XpdlRoot'
	id=EString
	'{'
		('diagramName' diagramName=EString)?
		('pools' '{' pools+=Pool ( "," pools+=Pool)* '}' )?
		('process' '{' process+=Process ( "," process+=Process)* '}' )?
		('messageflows' '{' messageflows+=MessageFlow ( "," messageflows+=MessageFlow)* '}' )?
	'}';







MessageFlowValid returns MessageFlowValid:
	Pool | Activity_Impl | BlockActivity | Event | Gateway | SubFlow;

Activity returns Activity:
	Activity_Impl | BlockActivity | Event | Gateway | SubFlow;

TransitionValid returns TransitionValid:
	Activity_Impl | BlockActivity | Event | Gateway | SubFlow;

Pool returns Pool:
	'Pool'
	id=EString
	'{'
		('name' name=EString)?
		'lanes' '{' lanes+=Lane ( "," lanes+=Lane)* '}' 
	'}';

Process returns Process:
	'Process'
	id=EString
	'{'
		('name' name=EString)?
		'pool' pool=[Pool|EString]
		('transitions' '{' transitions+=Transition ( "," transitions+=Transition)* '}' )?
		('activityset' '{' activityset+=ActivitySet ( "," activityset+=ActivitySet)* '}' )?
	'}';

MessageFlow returns MessageFlow:
	{MessageFlow}
	'MessageFlow'
	'{'
		('source' source=[MessageFlowValid|EString])?
		('target' target=[MessageFlowValid|EString])?
	'}';

EString returns ecore::EString:
	STRING | ID;

Lane returns Lane:
	{Lane}
	'Lane'
	id=EString
	'{'
		('name' name=EString)?
		('activityset' activityset=ActivitySet)?
	'}';

ActivitySet returns ActivitySet:
	'ActivitySet'
	id=EString
	'{'
		('name' name=EString)?
		'activities' '{' activities+=Activity ( "," activities+=Activity)* '}' 
	'}';

Activity_Impl returns Activity:
	{Activity}
	'Activity'
	id=EString
	'{'
		('title' title=EString)?
	'}';

BlockActivity returns BlockActivity:
	{BlockActivity}
	'BlockActivity'
	id=EString
	'{'
		('title' title=EString)?
	'}';

Event returns Event:
	{Event}
	'Event'
	id=EString
	'{'
		('title' title=EString)?
		('time' time=EventTime)?
		('type' type=EventType)?
	'}';

Gateway returns Gateway:
	{Gateway}
	'Gateway'
	id=EString
	'{'
		('title' title=EString)?
		('rule' rule=GateRule)?
	'}';

SubFlow returns SubFlow:
	{SubFlow}
	'SubFlow'
	id=EString
	'{'
		('title' title=EString)?
	'}';

enum EventTime returns EventTime:
				START = 'START' | INTERMEDIATE = 'INTERMEDIATE' | END = 'END';

enum EventType returns EventType:
				NONE = 'NONE' | MESSAGE = 'MESSAGE' | EROR = 'EROR' | RULE = 'RULE' | TIMER = 'TIMER';

enum GateRule returns GateRule:
				XOR = 'XOR' | OR = 'OR' | AND = 'AND';

Transition returns Transition:
	'Transition'
	'{'
		('condition' condition=EString)?
		'source' source=[TransitionValid|EString]
		'target' target=[TransitionValid|EString]
	'}';
