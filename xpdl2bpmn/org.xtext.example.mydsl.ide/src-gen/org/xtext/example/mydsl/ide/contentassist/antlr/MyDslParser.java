/*
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mydsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl.ide.contentassist.antlr.internal.InternalMyDslParser;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MyDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MyDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getMessageFlowValidAccess().getAlternatives(), "rule__MessageFlowValid__Alternatives");
			builder.put(grammarAccess.getActivityAccess().getAlternatives(), "rule__Activity__Alternatives");
			builder.put(grammarAccess.getTransitionValidAccess().getAlternatives(), "rule__TransitionValid__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getEventTimeAccess().getAlternatives(), "rule__EventTime__Alternatives");
			builder.put(grammarAccess.getEventTypeAccess().getAlternatives(), "rule__EventType__Alternatives");
			builder.put(grammarAccess.getGateRuleAccess().getAlternatives(), "rule__GateRule__Alternatives");
			builder.put(grammarAccess.getXpdlRootAccess().getGroup(), "rule__XpdlRoot__Group__0");
			builder.put(grammarAccess.getXpdlRootAccess().getGroup_4(), "rule__XpdlRoot__Group_4__0");
			builder.put(grammarAccess.getXpdlRootAccess().getGroup_5(), "rule__XpdlRoot__Group_5__0");
			builder.put(grammarAccess.getXpdlRootAccess().getGroup_5_3(), "rule__XpdlRoot__Group_5_3__0");
			builder.put(grammarAccess.getXpdlRootAccess().getGroup_6(), "rule__XpdlRoot__Group_6__0");
			builder.put(grammarAccess.getXpdlRootAccess().getGroup_6_3(), "rule__XpdlRoot__Group_6_3__0");
			builder.put(grammarAccess.getXpdlRootAccess().getGroup_7(), "rule__XpdlRoot__Group_7__0");
			builder.put(grammarAccess.getXpdlRootAccess().getGroup_7_3(), "rule__XpdlRoot__Group_7_3__0");
			builder.put(grammarAccess.getPoolAccess().getGroup(), "rule__Pool__Group__0");
			builder.put(grammarAccess.getPoolAccess().getGroup_3(), "rule__Pool__Group_3__0");
			builder.put(grammarAccess.getPoolAccess().getGroup_7(), "rule__Pool__Group_7__0");
			builder.put(grammarAccess.getProcessAccess().getGroup(), "rule__Process__Group__0");
			builder.put(grammarAccess.getProcessAccess().getGroup_3(), "rule__Process__Group_3__0");
			builder.put(grammarAccess.getProcessAccess().getGroup_6(), "rule__Process__Group_6__0");
			builder.put(grammarAccess.getProcessAccess().getGroup_6_3(), "rule__Process__Group_6_3__0");
			builder.put(grammarAccess.getProcessAccess().getGroup_7(), "rule__Process__Group_7__0");
			builder.put(grammarAccess.getProcessAccess().getGroup_7_3(), "rule__Process__Group_7_3__0");
			builder.put(grammarAccess.getMessageFlowAccess().getGroup(), "rule__MessageFlow__Group__0");
			builder.put(grammarAccess.getMessageFlowAccess().getGroup_3(), "rule__MessageFlow__Group_3__0");
			builder.put(grammarAccess.getMessageFlowAccess().getGroup_4(), "rule__MessageFlow__Group_4__0");
			builder.put(grammarAccess.getLaneAccess().getGroup(), "rule__Lane__Group__0");
			builder.put(grammarAccess.getLaneAccess().getGroup_4(), "rule__Lane__Group_4__0");
			builder.put(grammarAccess.getLaneAccess().getGroup_5(), "rule__Lane__Group_5__0");
			builder.put(grammarAccess.getActivitySetAccess().getGroup(), "rule__ActivitySet__Group__0");
			builder.put(grammarAccess.getActivitySetAccess().getGroup_3(), "rule__ActivitySet__Group_3__0");
			builder.put(grammarAccess.getActivitySetAccess().getGroup_7(), "rule__ActivitySet__Group_7__0");
			builder.put(grammarAccess.getActivity_ImplAccess().getGroup(), "rule__Activity_Impl__Group__0");
			builder.put(grammarAccess.getActivity_ImplAccess().getGroup_4(), "rule__Activity_Impl__Group_4__0");
			builder.put(grammarAccess.getBlockActivityAccess().getGroup(), "rule__BlockActivity__Group__0");
			builder.put(grammarAccess.getBlockActivityAccess().getGroup_4(), "rule__BlockActivity__Group_4__0");
			builder.put(grammarAccess.getEventAccess().getGroup(), "rule__Event__Group__0");
			builder.put(grammarAccess.getEventAccess().getGroup_4(), "rule__Event__Group_4__0");
			builder.put(grammarAccess.getEventAccess().getGroup_5(), "rule__Event__Group_5__0");
			builder.put(grammarAccess.getEventAccess().getGroup_6(), "rule__Event__Group_6__0");
			builder.put(grammarAccess.getGatewayAccess().getGroup(), "rule__Gateway__Group__0");
			builder.put(grammarAccess.getGatewayAccess().getGroup_4(), "rule__Gateway__Group_4__0");
			builder.put(grammarAccess.getGatewayAccess().getGroup_5(), "rule__Gateway__Group_5__0");
			builder.put(grammarAccess.getSubFlowAccess().getGroup(), "rule__SubFlow__Group__0");
			builder.put(grammarAccess.getSubFlowAccess().getGroup_4(), "rule__SubFlow__Group_4__0");
			builder.put(grammarAccess.getTransitionAccess().getGroup(), "rule__Transition__Group__0");
			builder.put(grammarAccess.getTransitionAccess().getGroup_2(), "rule__Transition__Group_2__0");
			builder.put(grammarAccess.getXpdlRootAccess().getIdAssignment_2(), "rule__XpdlRoot__IdAssignment_2");
			builder.put(grammarAccess.getXpdlRootAccess().getDiagramNameAssignment_4_1(), "rule__XpdlRoot__DiagramNameAssignment_4_1");
			builder.put(grammarAccess.getXpdlRootAccess().getPoolsAssignment_5_2(), "rule__XpdlRoot__PoolsAssignment_5_2");
			builder.put(grammarAccess.getXpdlRootAccess().getPoolsAssignment_5_3_1(), "rule__XpdlRoot__PoolsAssignment_5_3_1");
			builder.put(grammarAccess.getXpdlRootAccess().getProcessAssignment_6_2(), "rule__XpdlRoot__ProcessAssignment_6_2");
			builder.put(grammarAccess.getXpdlRootAccess().getProcessAssignment_6_3_1(), "rule__XpdlRoot__ProcessAssignment_6_3_1");
			builder.put(grammarAccess.getXpdlRootAccess().getMessageflowsAssignment_7_2(), "rule__XpdlRoot__MessageflowsAssignment_7_2");
			builder.put(grammarAccess.getXpdlRootAccess().getMessageflowsAssignment_7_3_1(), "rule__XpdlRoot__MessageflowsAssignment_7_3_1");
			builder.put(grammarAccess.getPoolAccess().getIdAssignment_1(), "rule__Pool__IdAssignment_1");
			builder.put(grammarAccess.getPoolAccess().getNameAssignment_3_1(), "rule__Pool__NameAssignment_3_1");
			builder.put(grammarAccess.getPoolAccess().getLanesAssignment_6(), "rule__Pool__LanesAssignment_6");
			builder.put(grammarAccess.getPoolAccess().getLanesAssignment_7_1(), "rule__Pool__LanesAssignment_7_1");
			builder.put(grammarAccess.getProcessAccess().getIdAssignment_1(), "rule__Process__IdAssignment_1");
			builder.put(grammarAccess.getProcessAccess().getNameAssignment_3_1(), "rule__Process__NameAssignment_3_1");
			builder.put(grammarAccess.getProcessAccess().getPoolAssignment_5(), "rule__Process__PoolAssignment_5");
			builder.put(grammarAccess.getProcessAccess().getTransitionsAssignment_6_2(), "rule__Process__TransitionsAssignment_6_2");
			builder.put(grammarAccess.getProcessAccess().getTransitionsAssignment_6_3_1(), "rule__Process__TransitionsAssignment_6_3_1");
			builder.put(grammarAccess.getProcessAccess().getActivitysetAssignment_7_2(), "rule__Process__ActivitysetAssignment_7_2");
			builder.put(grammarAccess.getProcessAccess().getActivitysetAssignment_7_3_1(), "rule__Process__ActivitysetAssignment_7_3_1");
			builder.put(grammarAccess.getMessageFlowAccess().getSourceAssignment_3_1(), "rule__MessageFlow__SourceAssignment_3_1");
			builder.put(grammarAccess.getMessageFlowAccess().getTargetAssignment_4_1(), "rule__MessageFlow__TargetAssignment_4_1");
			builder.put(grammarAccess.getLaneAccess().getIdAssignment_2(), "rule__Lane__IdAssignment_2");
			builder.put(grammarAccess.getLaneAccess().getNameAssignment_4_1(), "rule__Lane__NameAssignment_4_1");
			builder.put(grammarAccess.getLaneAccess().getActivitysetAssignment_5_1(), "rule__Lane__ActivitysetAssignment_5_1");
			builder.put(grammarAccess.getActivitySetAccess().getIdAssignment_1(), "rule__ActivitySet__IdAssignment_1");
			builder.put(grammarAccess.getActivitySetAccess().getNameAssignment_3_1(), "rule__ActivitySet__NameAssignment_3_1");
			builder.put(grammarAccess.getActivitySetAccess().getActivitiesAssignment_6(), "rule__ActivitySet__ActivitiesAssignment_6");
			builder.put(grammarAccess.getActivitySetAccess().getActivitiesAssignment_7_1(), "rule__ActivitySet__ActivitiesAssignment_7_1");
			builder.put(grammarAccess.getActivity_ImplAccess().getIdAssignment_2(), "rule__Activity_Impl__IdAssignment_2");
			builder.put(grammarAccess.getActivity_ImplAccess().getTitleAssignment_4_1(), "rule__Activity_Impl__TitleAssignment_4_1");
			builder.put(grammarAccess.getBlockActivityAccess().getIdAssignment_2(), "rule__BlockActivity__IdAssignment_2");
			builder.put(grammarAccess.getBlockActivityAccess().getTitleAssignment_4_1(), "rule__BlockActivity__TitleAssignment_4_1");
			builder.put(grammarAccess.getEventAccess().getIdAssignment_2(), "rule__Event__IdAssignment_2");
			builder.put(grammarAccess.getEventAccess().getTitleAssignment_4_1(), "rule__Event__TitleAssignment_4_1");
			builder.put(grammarAccess.getEventAccess().getTimeAssignment_5_1(), "rule__Event__TimeAssignment_5_1");
			builder.put(grammarAccess.getEventAccess().getTypeAssignment_6_1(), "rule__Event__TypeAssignment_6_1");
			builder.put(grammarAccess.getGatewayAccess().getIdAssignment_2(), "rule__Gateway__IdAssignment_2");
			builder.put(grammarAccess.getGatewayAccess().getTitleAssignment_4_1(), "rule__Gateway__TitleAssignment_4_1");
			builder.put(grammarAccess.getGatewayAccess().getRuleAssignment_5_1(), "rule__Gateway__RuleAssignment_5_1");
			builder.put(grammarAccess.getSubFlowAccess().getIdAssignment_2(), "rule__SubFlow__IdAssignment_2");
			builder.put(grammarAccess.getSubFlowAccess().getTitleAssignment_4_1(), "rule__SubFlow__TitleAssignment_4_1");
			builder.put(grammarAccess.getTransitionAccess().getConditionAssignment_2_1(), "rule__Transition__ConditionAssignment_2_1");
			builder.put(grammarAccess.getTransitionAccess().getSourceAssignment_4(), "rule__Transition__SourceAssignment_4");
			builder.put(grammarAccess.getTransitionAccess().getTargetAssignment_6(), "rule__Transition__TargetAssignment_6");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MyDslGrammarAccess grammarAccess;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
